[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Understanding Knee Strength during ACLR Recovery",
    "section": "",
    "text": "Report",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "index.html#prepared-for",
    "href": "index.html#prepared-for",
    "title": "Understanding Knee Strength during ACLR Recovery",
    "section": "Prepared for",
    "text": "Prepared for\nThis report was made to help doctors, physical therapists, or any clinician who works with ACLR patients during recovery. Our focus was to offer insight into how flexion and extension strength progress over time after surgery.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "index.html#problem-statement",
    "href": "index.html#problem-statement",
    "title": "Understanding Knee Strength during ACLR Recovery",
    "section": "Problem Statement",
    "text": "Problem Statement\nThe knee has two primary functions: flexion and extension. Both these strengths can be measured isokinetically or isometrically, and at varying degrees. Isokinetic strength is a measurement of how strong the movement of the patient’s limb is, while isometric strength is a measure of how strong the patient’s limb is without movement. The variables we used utilize the average limb symmetry index (LSI) by dividing the strength of the uninvolved limb by the strength of the involved limb. This accounts for external factors contributing to the strength differences between patients. After injury, and even after surgery, both these strengths have decreased in the affected limb. Rehabilitation aims to get a patient’s knee strength back to where they were before surgery. To explore the successes and failures of rehab, we asked the following questions: Do flexion strength and extension strength progress differently during recovery? How might strength tests relate to more holistic measures of recovery, such as ACL-RSI?",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "index.html#analysis",
    "href": "index.html#analysis",
    "title": "Understanding Knee Strength during ACLR Recovery",
    "section": "Analysis",
    "text": "Analysis\nBased on our visuals, we can see some clear trends in flexion and extension strength over recovery time. Our first graph shows the relationship between isokinetic flexion and extension strength, five to seven months post-operation, over a range of ages. From the graph, we concluded that regardless of the patient’s age, their flexion strength at this stage in recovery is better than their extension strength. We can even see that flexion strength is generally around a value of 100, which means that the involved limb is operating at the same strength as the uninvolved limb.\n\n\n\nStrength vs Age\n\n\nIn our second graph, we looked at the trends in isokinetic and isometric LSI flexion and extension strengths during early and late recovery. A gap between flexion and extension strength LSI exists in early recovery, and still exists 13 to 24 months after surgery. This trend exists for both isokinetic and isometric data. Even though both kinds of knee strength improve, doctors ought to try and close the gap between them.\n\n\n\nSpaghetti Plot\n\n\nIn our third graph, we looked at a couple of patients’ journeys through recovery by plotting their strength against psychological readiness. We concluded that recovery is not linear and requires a balance between physical readiness and mental confidence. When comparing the two graphs, we noticed that flexion strength seems to be more consistent with an upward trend in relation to the RSI score across patients, suggesting a more consistent relationship between flexion strength and confidence, indicating a gap between flexion and extension strength rehab programs.\n\n\n\nConnected Scatter",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "Understanding Knee Strength during ACLR Recovery",
    "section": "Conclusion",
    "text": "Conclusion\nPhysical therapists should pay special attention to extension strength during rehab, as patients tend to have weaker extension than flexion. In addition to strength, nonlinear patterns between strength and psychological improvement underline the need for a holistic recovery approach.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "datacleaning.html",
    "href": "datacleaning.html",
    "title": "1  Data Cleaning",
    "section": "",
    "text": "All data used in this project came from a simulated dataset regarding ACLR recovery. The simulated data was based on patient data compiled by School of Data Science and the Department of Kinesiology at the University of Virginia. To explore our guiding question, we filtered and cleaned the dataset as below:\nFirst, we imported our dependencies and loaded in the original dataset\n\n#import dependencies\nimport pandas as pd\n\n\n#load in the data\naclr_orig = pd.read_csv('aclr_data.csv')\n\nSecond, we dropped all columns that weren’t relevant to our guiding question. We included strength measurements as well as demographics that might impact recovery\n\ncol_list = ['record_id', 'sex_dashboard', 'age', 'age_group', 'tss', 'tss_dashboard', 'ikdc', 'acl_rsi']\nlsi_list = [col for col in aclr_orig.columns if 'lsi' in col and '_l' not in col]\nfinal_list = col_list + lsi_list\naclr_used = aclr_orig[final_list]\n\nSince the data was longitudinal, we could fill in some missing data using ‘record_id’, which identified unique patients. Values for sex and age group were filled in this way:\n\naclr = aclr_used.copy()\n# Update to use .ffill() and .bfill() directly\naclr['sex_dashboard'] = aclr.groupby('record_id')['sex_dashboard'].transform(lambda x: x.ffill().bfill())\naclr['age_group'] = aclr.groupby('record_id')['age_group'].transform(lambda x: x.ffill().bfill())\n\nC:\\Users\\olive\\AppData\\Local\\Temp\\ipykernel_13176\\3751731967.py:3: FutureWarning:\n\nDowncasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n\n\n\nAge group was converted to a categorical variable\n\naclr['age_group'] = aclr['age_group'].astype('category')\n\nDue to the nature of the data, i.e. patients having multiple visits and various strength tests being used in different combinations, we chose not to drop rows with NA values. This gives u the most data possible to work with when drawing conclusions. We did, however, notice an issue in the lsi_flex_mvic_60 column. Some values were labled infinite, so we replaced these with NaN.\n\naclr.replace([float('inf'), float('-inf')], float('nan'), inplace=True)\n\n\naclr.to_csv('cleaned_aclr_data.csv', index=False)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Data Cleaning</span>"
    ]
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "2  Exploratory Data Analysis",
    "section": "",
    "text": "2.1 Demographic Distributions\nFirst, we did some preliminary graphs to understand what kind of patients were in the dataset. First with gender:\nunique_patients = aclr_clean.groupby('record_id').first()\n# Get the gender distribution\nsex_counts = unique_patients['sex_dashboard'].value_counts()\n#plot a bar graph\nplt.figure(figsize=(10, 6))\nplt.bar(sex_counts.index, sex_counts.values)\nplt.title('Gender distribution is relatively even in our dataset')\nsns.despine()\nAnd then with age:\n#create a histogram for the ikdc scores\nsns.histplot(data=unique_patients, x=\"age\", bins=20, kde=True)\nplt.title(\"Most Patients in Their Teens or Twenties\")\n\nText(0.5, 1.0, 'Most Patients in Their Teens or Twenties')",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploratory Data Analysis</span>"
    ]
  },
  {
    "objectID": "eda.html#progression-of-strength",
    "href": "eda.html#progression-of-strength",
    "title": "2  Exploratory Data Analysis",
    "section": "2.2 Progression of Strength",
    "text": "2.2 Progression of Strength\nSince this data is longitudinal, and we are interested in the progression of patient recovery over time, it makes the most since to do EDA organized around time since surgery. We checked out the distribution of strength measurments at different periods during recovery. First, 3-4 months since surgery:\n\n#sorting out just measurements from 3 to 4 months out\nearly = aclr_clean[aclr_clean['tss_dashboard']=='3 to 4 months']\n#filtering just the used columns\nearly = early[['lsi_ext_mvic_60', 'lsi_flex_mvic_60', 'lsi_ext_isok_60', 'lsi_flex_isok_60']]\nearly = early.melt(var_name=\"Measurement\", value_name=\"Value\")\nearly.dropna(inplace=True)\n#making violinplot\nsns.violinplot(data=early, x=\"Value\", y=\"Measurement\")\nplt.title(\"LSI strength measurements- 3 to 4 months post-op\")\nplt.show()\n\n\n\n\n\n\n\n\nThen 13 to 24 months post surgery:\n\nlater = aclr_clean[aclr_clean['tss_dashboard']=='13 to 24 months']\n#filtering just the used columns\nlater = later[['lsi_ext_mvic_60', 'lsi_flex_mvic_60', 'lsi_ext_isok_60', 'lsi_flex_isok_60']]\nlater = later.melt(var_name=\"Measurement\", value_name=\"Value\")\nlater.dropna(inplace=True)\n#making violinplot\nsns.violinplot(data=later, x=\"Value\", y=\"Measurement\")\nplt.title(\"LSI strength measurements- 13 to 24 months post-op\")\nplt.show()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploratory Data Analysis</span>"
    ]
  },
  {
    "objectID": "eda.html#progression-of-more-holistic-variables",
    "href": "eda.html#progression-of-more-holistic-variables",
    "title": "2  Exploratory Data Analysis",
    "section": "2.3 Progression of more holistic variables",
    "text": "2.3 Progression of more holistic variables\nAlong with the strength measurements, patient’s psychological readiness should also be considered. We explored how ACL-RSI scores developed during recovery.\n\norder = ['Preoperative', '3 to 4 months', '5 to 7 months', '8 to 12 months', '13 to 24 months']\naclr_clean['tss_dashboard'] = pd.Categorical(aclr_clean['tss_dashboard'], categories=order, ordered=True)\n\nplt.figure(figsize=(9, 7))\nplt.title('RSI Score Generally Increases With Time Since Surgery')\nsns.barplot(data=aclr_clean, x = 'tss_dashboard', y = 'acl_rsi', color = 'darkgreen')\nsns.despine()\n\n\n\n\n\n\n\n\nThe dip after 12 months is notable, but it’s likely that there could be a confounding variable here. Patients that don’t feel psychologically ready to return to their sport are more likely to go back to the doctor after 12 months. We also examined IKDC scores over time\n\n# looking at ikdc score compared to time since surgery, the score generally increases over time\norder = ['Preoperative', '3 to 4 months', '5 to 7 months', '8 to 12 months', '13 to 24 months']\naclr_clean['tss_dashboard'] = pd.Categorical(aclr_clean['tss_dashboard'], categories=order, ordered=True)\n\nplt.figure(figsize=(9, 7))\nplt.title('IKDC Score Generally Increases With Time Since Surgery')\nsns.barplot(data=aclr_clean, x = 'tss_dashboard', y = 'ikdc', color = 'darkgreen')\nsns.despine()\n\n\n\n\n\n\n\n\nSimilar situation as the graph before, patients who are still struggling after 12 months are more likely to return to the doctor. In general, though, most patient visits were less than 10 months after surgery:\n\nsns.boxplot(data=aclr_clean, x=\"tss\")\nplt.xlim(-5, 24)\nplt.title('Despite outliers, most patients were seen less than 10 months post-op')\n\nText(0.5, 1.0, 'Despite outliers, most patients were seen less than 10 months post-op')",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploratory Data Analysis</span>"
    ]
  },
  {
    "objectID": "eda.html#correlations",
    "href": "eda.html#correlations",
    "title": "2  Exploratory Data Analysis",
    "section": "2.4 Correlations",
    "text": "2.4 Correlations\nWe wanted to see if the various demographics and strength tests we were interested in correlated with one another, so we made a heatmap.\n\n#creating a heatmap to see how each variable correlates with the others\ncorrelations = aclr_clean.corr(numeric_only= True)\n\nplt.figure(figsize=(10, 8))\nsns.heatmap(correlations, annot=True, cmap='coolwarm')\nplt.title(\"Correlation Matrix\")\nplt.show()\n\n\n\n\n\n\n\n\nIKDC and RSI are positively correlated, which makes sense given they are more holistic evaluations. We next used a scatter plot to look into what the relationships between metrics like these and strength test might be\n\nplt.figure(figsize=(10, 6))\nplt.scatter(aclr_clean['acl_rsi'], aclr_clean['lsi_ext_isok_60'], color = 'orange', s = 10, label = 'Extension')\nplt.scatter(aclr_clean['acl_rsi'], aclr_clean['lsi_flex_isok_60'], color = 'green', s = 10, label = 'Flexion')\nsns.despine()\n\nplt.xlabel('rsi score')\nplt.ylabel('lsi strength')\nplt.title('RSI Score and LSI ISOK Strength for Extension and Flexion at 60')\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nSimilar to what the heatmap suggested, not quite as correlated as one would think. Extension scores seem to have lower range than flexion ones. Let’s see how they both progress over time:\n\n# regression plot to see ISOK trend lines for flexion and extension strength and time since surgery shows greater strength for flexion than extension\nplt.figure(figsize=(10, 6))\nsns.regplot(data=aclr_clean, x ='tss', y ='lsi_ext_isok_60', color = 'orange', label = 'Extension')\nsns.regplot(data=aclr_clean, x ='tss', y ='lsi_flex_isok_60', color = 'green', label = 'Flexion')\nsns.despine()\n\nplt.xlabel('Time Since Surgery')\nplt.ylabel('ISOK LSI Strength')\nplt.title('ISOK LSI Strength for Flexion Appears Greater Than Extension Over Time Since Surgery')\nplt.legend()\n\n\n\n\n\n\n\n\nThe lines of best fit might look close together, but considering an LSI of over 100 is rare, the difference might be significant.\nLastly, given that we were interested in both flexion and extension strength, we plotted them on a scatterplot:\n\n#relationship between extension and flexion strength (both MVIC and isokinetic at 60°) across patients, colored by sex to highlight potential gender-based patterns.\nsns.scatterplot(data=aclr_clean, x='lsi_ext_mvic_60', y='lsi_flex_mvic_60', hue='sex_dashboard')\nplt.title(\"MVIC 60°: Extension vs Flexion Strength by Sex\")\nplt.xlabel(\"Extension LSI (MVIC 60°)\")\nplt.ylabel(\"Flexion LSI (MVIC 60°)\")\nplt.show()\n\n# Scatterplot: Isokinetic 60° Strength\nsns.scatterplot(data=aclr_clean, x='lsi_ext_isok_60', y='lsi_flex_isok_60', hue='sex_dashboard')\nplt.title(\"Isokinetic 60°: Extension vs Flexion Strength by Sex\")\nplt.xlabel(\"Extension LSI (Isok 60°)\")\nplt.ylabel(\"Flexion LSI (Isok 60°)\")\nplt.show()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exploratory Data Analysis</span>"
    ]
  },
  {
    "objectID": "dataviz.html",
    "href": "dataviz.html",
    "title": "3  Visualizations",
    "section": "",
    "text": "3.1 Regression Plot - Strength vs Age\n#filter data for only patients at 5 to 7 months post operation\naclr_filtered = aclr[aclr['tss_dashboard'] == '5 to 7 months']\n\n#set figure size\nplt.figure(figsize=(11, 7))\n\n#melting data for isok variables, adding age to isok dataframe\nisok = aclr_filtered[[col for col in aclr.columns if 'isok' in col]].copy()\nisok['age'] = aclr_filtered['age']\nisok = isok.melt(id_vars='age', var_name=\"Measurement\", value_name=\"Value\")\nisok.replace([float('inf'), float('-inf')], float('nan'), inplace=True)\nisok.dropna(inplace=True)\n\n#averaging value by age\nisok_avg = isok.groupby(['age', 'Measurement'])['Value'].mean().reset_index()\n\n#seperating into extension and flexion measurements\nisok_measurements = isok_avg['Measurement'].unique()\n\n#plotting isok regression plot\nfor m in isok_measurements:\n    subset = isok_avg[isok_avg['Measurement'] == m]\n    label = 'Extension' if 'ext' in m else 'Flexion'\n    color = 'firebrick' if 'ext' in m else 'slateblue'\n    sns.regplot(data=subset, x='age', y='Value', label= label, color = color, scatter=True)\nplt.tick_params(axis='both', which='both', length=0)\nplt.xlabel('Age')\nplt.ylabel('ISOK Strength')\n\n#adding title and subtitle\nplt.title('Average Limb Symmetry Index (LSI) for Isokinetic Knee Strength Test at 60°, 5 to 7 Months Post-Operation',loc = 'left', x = -0.03, family = 'serif', pad = 20, fontsize=13, color='gray')\nplt.text(-0.03, 1.15, 'Despite Patient Age,', va='top', font='Times New Roman', fontsize=22, fontweight='bold', transform=plt.gca().transAxes)\nplt.text(0.235, 1.15, \"Flexion\", va='top', font='Times New Roman', color = 'slateblue', fontsize=22, fontweight='bold', transform=plt.gca().transAxes)\nplt.text(0.337, 1.15, 'Strength Appears Better Than', va='top', font='Times New Roman', fontsize=22, fontweight='bold', transform=plt.gca().transAxes)\nplt.text(0.732, 1.15, \"Extension\", va='top', font='Times New Roman', color = 'firebrick', fontsize=22, fontweight='bold', transform=plt.gca().transAxes)\n\n#setting y range (LSI above 125 are rare)\nplt.ylim(0, 125)\n#despine and tight layout\nsns.despine(top=True, right=True, left=True, bottom=True)\nplt.tight_layout()\nplt.savefig('strengthreg.jpg', format='jpg', dpi=300, bbox_inches='tight')",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Visualizations</span>"
    ]
  },
  {
    "objectID": "dataviz.html#spaghetti-plot---early-and-late-recovery",
    "href": "dataviz.html#spaghetti-plot---early-and-late-recovery",
    "title": "3  Visualizations",
    "section": "3.2 Spaghetti Plot - early and late recovery",
    "text": "3.2 Spaghetti Plot - early and late recovery\n\n#group data by time since surgery\nacl_grouped = aclr.groupby('tss_dashboard').agg(\n    mean_ext_mvic_60=('lsi_ext_mvic_60', 'mean'),\n    mean_flex_mvic=('lsi_flex_mvic_60', 'mean'),\n    mean_ext_isok=('lsi_ext_isok_60', 'mean'),\n    mean_flex_isok=('lsi_flex_isok_60', 'mean')\n).reset_index()\n\n#filter out and order only early and late time windows\nnew_order = [1,2,3,0,4,5]\nacl_grouped = acl_grouped.iloc[new_order]\nacl_grouped = acl_grouped.reset_index(drop=True)\nacl_grouped = acl_grouped.drop(index=[1,2,4,5])\nacl_grouped = acl_grouped.reset_index(drop=True)\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n#graph slopes\nax.plot(acl_grouped['tss_dashboard'], acl_grouped['mean_ext_isok'], linestyle='-', color='firebrick', label='Extension Isokinetic')\nax.plot(acl_grouped['tss_dashboard'], acl_grouped['mean_flex_isok'], linestyle='-', color='slateblue', label='Flexion Isokinetic')\nax.plot(acl_grouped['tss_dashboard'], acl_grouped['mean_flex_mvic'], linestyle='--', color='slateblue', label='Flexion MVIC')\nax.plot(acl_grouped['tss_dashboard'], acl_grouped['mean_ext_mvic_60'], linestyle='--', color='firebrick', label='Extension MVIC')\n\n#remove unnecessary scaffolding\nax.set_ylim(60, 100)\nax.set_yticks([])\nax.set_ylabel('')\nax.set_xticks([])\nax.set_xlabel('')\nsns.despine(top=True, right=True, left=True, bottom=True)\n\n#add a legend for line type\ncustom_legend = [\n    Line2D([0], [0], color='black', linestyle='-', label='Isokinetic (60°/s)'),\n    Line2D([0], [0], color='black', linestyle='--', label='MVIC (60°)')\n]\nax.legend(handles=custom_legend, loc='lower right', fontsize=12)\n\n#add color coded title (with degrees)\nplt.text(0.125, 1.13, 'Patients Have Stronger', ha='center', va='top', fontsize=22, font='Times New Roman', fontweight='bold', transform=ax.transAxes)\nplt.text(0.36, 1.13, 'Flexion', ha='center', va='top', fontsize=22, color='slateblue', font='Times New Roman', fontweight='bold', transform=ax.transAxes)\nplt.text(0.462, 1.13, 'Than', ha='center', va='top', fontsize=22, font='Times New Roman', fontweight='bold', transform=ax.transAxes)\nplt.text(0.58, 1.13, 'Extension', ha='center', va='top', fontsize=22, color='firebrick', font='Times New Roman', fontweight='bold', transform=ax.transAxes)\nplt.text(0.772, 1.13, 'After Recovery', ha='center', va='top', fontsize=22, font='Times New Roman', fontweight='bold', transform=ax.transAxes)\n\n#add a subtitle/y axis label\nplt.text(-0.045, 1.065, 'Average Limb Symmetry Index (LSI) for Knee Strength Tests at 60°/s',\n         ha='left', va='top', fontsize=16, font='Times New Roman', transform=ax.transAxes)\n\n#label start and end values\nplt.text(-0.05, 0.53, '81.8%', color='slateblue', fontsize=13, transform=ax.transAxes)\nplt.text(0.96, 0.9, '96.4%', color='slateblue', fontsize=13, transform=ax.transAxes)\n\nplt.text(-0.05, 0.4, '76.0%', color='slateblue', fontsize=13, transform=ax.transAxes)\nplt.text(0.96, 0.45, '78.4%', color='slateblue', fontsize=13, transform=ax.transAxes)\n\nplt.text(-0.05, 0.06, '63.1%', color='firebrick', fontsize=13, transform=ax.transAxes)\nplt.text(0.96, 0.49, '79.7%', color='firebrick', fontsize=13, transform=ax.transAxes)\n\nplt.text(-0.05, 0.22, '69.3%', color='firebrick', fontsize=13, transform=ax.transAxes)\nplt.text(0.96, 0.39, '76.3%', color='firebrick', fontsize=13, transform=ax.transAxes)\n\n#label axes\nplt.text(0.055, 1, \"3–4 months post-op\", ha='center', va='top', fontsize=13, transform=ax.transAxes)\nplt.text(0.9, 1, \"13–24 months post-op\", ha='center', va='top', fontsize=13, transform=ax.transAxes)\nplt.tight_layout()\nplt.savefig('spaghetti.jpg', format='jpg', dpi=300, bbox_inches='tight')",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Visualizations</span>"
    ]
  },
  {
    "objectID": "dataviz.html#connected-scatterplot",
    "href": "dataviz.html#connected-scatterplot",
    "title": "3  Visualizations",
    "section": "3.3 Connected Scatterplot",
    "text": "3.3 Connected Scatterplot\n\n#define the selected patients that filter patinets with 2 or more visits and picked the top 5\ndf_required_2 = aclr.dropna(subset=['lsi_flex_mvic_60', 'acl_rsi', 'tss'])\npatient_counts_2 = df_required_2['record_id'].value_counts()\nselected_patients_2 = patient_counts_2[patient_counts_2 &gt;= 2].index[:5]\ndf_selected_2 = df_required_2[df_required_2['record_id'].isin(selected_patients_2)]\n\n\n#same with iso\ndf_iso_required = aclr.dropna(subset=['lsi_ext_isok_60', 'acl_rsi', 'tss'])\npatient_counts_iso = df_iso_required['record_id'].value_counts()\nselected_iso_patients = patient_counts_iso[patient_counts_iso &gt;= 2].index[:5]\ndf_iso_selected = df_iso_required[df_iso_required['record_id'].isin(selected_iso_patients)]\n\n#make the legend sit inside the plot \nfig, axes = plt.subplots(1, 2, figsize=(16, 8), sharey=True)\n\n\n#first plot the flexion strength vs rsi\npalette = sns.color_palette(\"colorblind\", len(selected_patients_2))\nfor i, pid in enumerate(selected_patients_2):\n   patient_df = df_selected_2[df_selected_2['record_id'] == pid]\n   x_vals = patient_df['lsi_flex_mvic_60'].values\n   y_vals = patient_df['acl_rsi'].values\n   for j in range(len(x_vals) - 1):\n       dx = x_vals[j+1] - x_vals[j]\n       dy = y_vals[j+1] - y_vals[j]\n       x_mid = (x_vals[j] + x_vals[j+1]) / 2\n       y_mid = (y_vals[j] + y_vals[j+1]) / 2\n       axes[0].arrow(x_mid, y_mid,dx * 0.0001, dy * 0.0001,color=palette[i],alpha=0.9,head_width=1.5,head_length=1.5,length_includes_head=True)\n       axes[0].plot([x_vals[j], x_vals[j+1]], [y_vals[j], y_vals[j+1]], color=palette[i], linewidth=1.5)\n   axes[0].scatter(x_vals, y_vals, color=palette[i], edgecolor='k')\naxes[0].set_xlabel(\"Flexion Strength (LSI - MVIC 60°)\")\naxes[0].set_ylabel(\"ACL-RSI Score\")\n\n\n#make the legend\nlegend_patch = plt.Line2D([0], [0], marker='_', color='grey', label='Each color = one patient',markerfacecolor='gray', markersize=10)\naxes[0].legend(handles=[legend_patch], loc='lower right')\n\n\n#make the second plot for extension strength vs rsi\npalette_ext = sns.color_palette(\"colorblind\", len(selected_iso_patients))\nfor i, pid in enumerate(selected_iso_patients):\n   patient_df = df_iso_selected[df_iso_selected['record_id'] == pid]\n   x_vals = patient_df['lsi_ext_isok_60'].values\n   y_vals = patient_df['acl_rsi'].values\n   for j in range(len(x_vals) - 1):\n       dx = x_vals[j+1] - x_vals[j]\n       dy = y_vals[j+1] - y_vals[j]\n       x_mid = (x_vals[j] + x_vals[j+1]) / 2\n       y_mid = (y_vals[j] + y_vals[j+1]) / 2\n       axes[1].arrow(x_mid, y_mid,dx * 0.0001, dy * 0.0001,color=palette_ext[i],alpha=0.9,head_width=1.5,head_length=1.5,length_includes_head=True)\n       axes[1].plot([x_vals[j], x_vals[j+1]], [y_vals[j], y_vals[j+1]], color=palette_ext[i], linewidth=1.5)\n   axes[1].scatter(x_vals, y_vals, color=palette_ext[i], edgecolor='k')\naxes[1].set_xlabel(\"Extension Strength (LSI - Isokinetic 60°/s)\")\n\n\n#plot final plots\nplt.suptitle(\"Recovery is Nonlinear: Strength and Psychological Readiness\", fontsize=22, font = 'Times New Roman', fontweight = 'bold', y=1.03, x =0.29)\nfig.text(0.174, 0.972, \"Sample Patients' Development Over Time\", ha='center', va='top', fontsize=18, font='Times New Roman')\nsns.despine(ax=axes[0], top=True, right=True) #take off the top and right spines\nsns.despine(ax=axes[1], top=True, right=True)\nplt.tight_layout()\nplt.savefig('connected.jpg', format='jpg', dpi=300, bbox_inches='tight')",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Visualizations</span>"
    ]
  },
  {
    "objectID": "datadictionary.html",
    "href": "datadictionary.html",
    "title": "4  Data Dictionary",
    "section": "",
    "text": "‘record_id’: The unique identifier for each patient. Some patients may have multiple visits. (Numeric)\n‘sex_dashboard’: The sex of the patient, male, female, or not reported. (Categorical)\n‘age’: The age in years of the patient. (Numeric)\n‘age_group’: The age group the patient falls into. (Categorical)\n‘tss’: Time since surgery in months (Numeric)\ntss_dashboard’: A categorical version of the time since surgery column (Categorical)\n‘ikdc’: The patients score on the International Knee Documentation Committee’s survey, indicating overall knee function (Numeric)\n‘acl_rsi’: The patient’s score on the ACL Return to Sport after Injury, which measures psychological readiness. (Numeric)\n‘lsi_ext_mvic_90’: The LSI of extension strength measured isometrically at 90 degrees. (Numeric)\n‘lsi_ext_mvic_60’: The LSI of extension strength measured isometrically at 60 degrees. (Numeric)\n‘lsi_flex_mvic_60’: The LSI of flexion strength measured isometrically at 60 degrees. (Numeric)\n‘lsi_ext_isok_60’: The LSI of extension strength measured isokinetically at 60 degrees. (Numeric)\n‘lsi_flex_isok_60’: The LSI of flexion strength measured isokinetically at 60 degrees. (Numeric)\n\nThe LSI, or Limb Symmetry Index, indicates how well the affected knee (the one operated on) is performing in comparison to the unaffected knee. This accounts for nuances from patient to patient.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Data Dictionary</span>"
    ]
  }
]